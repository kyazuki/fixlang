; ModuleID = 'main'
source_filename = "main"

@int_placefolder = private unnamed_addr constant [6 x i8] c"%lld\0A\00", align 1

declare i32 @printf(i8*, ...)

define void @print_int_obj({ i64, i64 }* %0) {
entry:
  %int_field_ptr = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  %int_val = load i64, i64* %int_field_ptr, align 4
  %call_print_int = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @int_placefolder, i32 0, i32 0), i64 %int_val)
  ret void
}

define i32 @main() {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64), i64 2) to i32))
  %int_obj_type = bitcast i8* %malloccall to { i64, i64 }*
  %ptr_to_refcnt = getelementptr inbounds { i64, i64 }, { i64, i64 }* %int_obj_type, i32 0, i32 0
  store i64 0, i64* %ptr_to_refcnt, align 4
  %ptr_to_field = getelementptr inbounds { i64, i64 }, { i64, i64 }* %int_obj_type, i32 0, i32 1
  store i64 -42, i64* %ptr_to_field, align 4
  call void @print_int_obj({ i64, i64 }* %int_obj_type)
  ret i32 0
}

declare noalias i8* @malloc(i32)
