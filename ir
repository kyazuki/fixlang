; ModuleID = 'main'
source_filename = "main"

@int_placefolder = private unnamed_addr constant [6 x i8] c"%lld\0A\00", align 1
@name_of_obj = private unnamed_addr constant [14 x i8] c"\\x->(fix f x)\00", align 1
@name_of_obj.2 = private unnamed_addr constant [20 x i8] c"\\f->(\\x->(fix f x))\00", align 1
@name_of_obj.6 = private unnamed_addr constant [11 x i8] c"eq lhs rhs\00", align 1
@name_of_obj.8 = private unnamed_addr constant [19 x i8] c"\\rhs->(eq lhs rhs)\00", align 1
@name_of_obj.10 = private unnamed_addr constant [27 x i8] c"\\lhs->(\\rhs->(eq lhs rhs))\00", align 1
@name_of_obj.13 = private unnamed_addr constant [12 x i8] c"add lhs rhs\00", align 1
@name_of_obj.15 = private unnamed_addr constant [20 x i8] c"\\rhs->(add lhs rhs)\00", align 1
@name_of_obj.17 = private unnamed_addr constant [28 x i8] c"\\lhs->(\\rhs->(add lhs rhs))\00", align 1
@name_of_obj.20 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@name_of_obj.22 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@name_of_obj.23 = private unnamed_addr constant [3 x i8] c"-1\00", align 1
@name_of_obj.24 = private unnamed_addr constant [75 x i8] c"\\x->(if ((eq) (x)) (0) then 0 else (((add) (x)) ((f) (((add) (x)) (-1)))))\00", align 1
@name_of_obj.26 = private unnamed_addr constant [81 x i8] c"\\f->(\\x->(if ((eq) (x)) (0) then 0 else (((add) (x)) ((f) (((add) (x)) (-1))))))\00", align 1
@name_of_obj.28 = private unnamed_addr constant [4 x i8] c"100\00", align 1

define void @empty_destructor(i64* %0) {
entry:
  ret void
}

declare i32 @printf(i8*, ...)

declare i64 @report_malloc(i8*, i8*)

declare void @report_retain(i8*, i64, i64)

declare void @report_release(i8*, i64, i64)

declare void @check_leak()

define void @print_int_obj({ { i64, void (i8*)*, i64 }, i64 }* %0) {
entry:
  %int_field_ptr = getelementptr inbounds { { i64, void (i8*)*, i64 }, i64 }, { { i64, void (i8*)*, i64 }, i64 }* %0, i32 0, i32 1
  %int_val = load i64, i64* %int_field_ptr, align 4
  %call_print_int = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @int_placefolder, i32 0, i32 0), i64 %int_val)
  ret void
}

define void @retain_obj(i8* %0) {
entry:
  %ptr_to_control_block = bitcast i8* %0 to { i64, void (i8*)*, i64 }*
  %ptr_to_refcnt = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block, i32 0, i32 0
  %refcnt = load i64, i64* %ptr_to_refcnt, align 4
  %ptr_to_control_block1 = bitcast i8* %0 to { i64, void (i8*)*, i64 }*
  %ptr_to_objid = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block1, i32 0, i32 2
  %objid = load i64, i64* %ptr_to_objid, align 4
  call void @report_retain(i8* %0, i64 %objid, i64 %refcnt)
  %refcnt2 = add i64 %refcnt, 1
  store i64 %refcnt2, i64* %ptr_to_refcnt, align 4
  ret void
}

define void @release_obj(i8* %0) {
entry:
  %ptr_to_control_block = bitcast i8* %0 to { i64, void (i8*)*, i64 }*
  %ptr_to_refcnt = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block, i32 0, i32 0
  %refcnt = load i64, i64* %ptr_to_refcnt, align 4
  %ptr_to_control_block1 = bitcast i8* %0 to { i64, void (i8*)*, i64 }*
  %ptr_to_objid = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block1, i32 0, i32 2
  %objid = load i64, i64* %ptr_to_objid, align 4
  call void @report_release(i8* %0, i64 %objid, i64 %refcnt)
  %refcnt2 = sub i64 %refcnt, 1
  store i64 %refcnt2, i64* %ptr_to_refcnt, align 4
  %is_refcnt_zero = icmp eq i64 %refcnt2, 0
  br i1 %is_refcnt_zero, label %refcnt_zero_after_release, label %end

refcnt_zero_after_release:                        ; preds = %entry
  %ptr_to_dtor_ptr = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block, i32 0, i32 1
  %ptr_to_dtor = load void (i8*)*, void (i8*)** %ptr_to_dtor_ptr, align 8
  call void %ptr_to_dtor(i8* %0)
  %1 = bitcast i64* %ptr_to_refcnt to i8*
  tail call void @free(i8* %1)
  br label %end

end:                                              ; preds = %refcnt_zero_after_release, %entry
  ret void
}

declare void @free(i8*)

define i64 @main() {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }* getelementptr ({ { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }* null, i32 1) to i32))
  %ptr_to_obj = bitcast i8* %malloccall to { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }*
  %cast_to_i8ptr = bitcast { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }* %ptr_to_obj to i8*
  %call_report_malloc = call i64 @report_malloc(i8* %cast_to_i8ptr, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @name_of_obj.2, i32 0, i32 0))
  %ptr_to_control_block = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }* %ptr_to_obj, i32 0, i32 0
  %ptr_to_refcnt = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt, align 4
  %ptr_to_dtor_field = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block, i32 0, i32 1
  store void (i8*)* @dtor.3, void (i8*)** %ptr_to_dtor_field, align 8
  %ptr_to_objid = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block, i32 0, i32 2
  store i64 %call_report_malloc, i64* %ptr_to_objid, align 4
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }* %ptr_to_obj, i32 0, i32 1
  store i8* (i8*, i8*)* @lambda, i8* (i8*, i8*)** %ptr_to_field, align 8
  %ptr_ret_generate_expr = bitcast { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }* %ptr_to_obj to i8*
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }* getelementptr ({ { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }* null, i32 1) to i32))
  %ptr_to_obj2 = bitcast i8* %malloccall1 to { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }*
  %cast_to_i8ptr3 = bitcast { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }* %ptr_to_obj2 to i8*
  %call_report_malloc4 = call i64 @report_malloc(i8* %cast_to_i8ptr3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @name_of_obj.10, i32 0, i32 0))
  %ptr_to_control_block5 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }* %ptr_to_obj2, i32 0, i32 0
  %ptr_to_refcnt6 = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block5, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt6, align 4
  %ptr_to_dtor_field7 = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block5, i32 0, i32 1
  store void (i8*)* @dtor.3, void (i8*)** %ptr_to_dtor_field7, align 8
  %ptr_to_objid8 = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block5, i32 0, i32 2
  store i64 %call_report_malloc4, i64* %ptr_to_objid8, align 4
  %ptr_to_field9 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }* %ptr_to_obj2, i32 0, i32 1
  store i8* (i8*, i8*)* @lambda.4, i8* (i8*, i8*)** %ptr_to_field9, align 8
  %ptr_ret_generate_expr10 = bitcast { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }* %ptr_to_obj2 to i8*
  %malloccall11 = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }* getelementptr ({ { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }* null, i32 1) to i32))
  %ptr_to_obj12 = bitcast i8* %malloccall11 to { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }*
  %cast_to_i8ptr13 = bitcast { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }* %ptr_to_obj12 to i8*
  %call_report_malloc14 = call i64 @report_malloc(i8* %cast_to_i8ptr13, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @name_of_obj.17, i32 0, i32 0))
  %ptr_to_control_block15 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }* %ptr_to_obj12, i32 0, i32 0
  %ptr_to_refcnt16 = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block15, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt16, align 4
  %ptr_to_dtor_field17 = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block15, i32 0, i32 1
  store void (i8*)* @dtor.3, void (i8*)** %ptr_to_dtor_field17, align 8
  %ptr_to_objid18 = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block15, i32 0, i32 2
  store i64 %call_report_malloc14, i64* %ptr_to_objid18, align 4
  %ptr_to_field19 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }* %ptr_to_obj12, i32 0, i32 1
  store i8* (i8*, i8*)* @lambda.11, i8* (i8*, i8*)** %ptr_to_field19, align 8
  %ptr_ret_generate_expr20 = bitcast { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }* %ptr_to_obj12 to i8*
  %malloccall21 = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8* }* getelementptr ({ { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8* }* null, i32 1) to i32))
  %ptr_to_obj22 = bitcast i8* %malloccall21 to { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8* }*
  %cast_to_i8ptr23 = bitcast { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8* }* %ptr_to_obj22 to i8*
  %call_report_malloc24 = call i64 @report_malloc(i8* %cast_to_i8ptr23, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @name_of_obj.26, i32 0, i32 0))
  %ptr_to_control_block25 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8* }* %ptr_to_obj22, i32 0, i32 0
  %ptr_to_refcnt26 = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block25, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt26, align 4
  %ptr_to_dtor_field27 = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block25, i32 0, i32 1
  store void (i8*)* @dtor.27, void (i8*)** %ptr_to_dtor_field27, align 8
  %ptr_to_objid28 = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block25, i32 0, i32 2
  store i64 %call_report_malloc24, i64* %ptr_to_objid28, align 4
  %ptr_to_field29 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8* }* %ptr_to_obj22, i32 0, i32 1
  store i8* (i8*, i8*)* @lambda.18, i8* (i8*, i8*)** %ptr_to_field29, align 8
  %ptr_to_field30 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8* }* %ptr_to_obj22, i32 0, i32 2
  store i8* %ptr_ret_generate_expr20, i8** %ptr_to_field30, align 8
  %ptr_to_field31 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8* }* %ptr_to_obj22, i32 0, i32 3
  store i8* %ptr_ret_generate_expr10, i8** %ptr_to_field31, align 8
  %ptr_ret_generate_expr32 = bitcast { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8* }* %ptr_to_obj22 to i8*
  %ptr_to_lam_obj = bitcast i8* %ptr_ret_generate_expr to { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }*
  %ptr_to_field33 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }* %ptr_to_lam_obj, i32 0, i32 1
  %field_value = load i8* (i8*, i8*)*, i8* (i8*, i8*)** %ptr_to_field33, align 8
  %call_lambda = tail call i8* %field_value(i8* %ptr_ret_generate_expr32, i8* %ptr_ret_generate_expr)
  %malloccall34 = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)*, i64 }, i64 }* getelementptr ({ { i64, void (i8*)*, i64 }, i64 }, { { i64, void (i8*)*, i64 }, i64 }* null, i32 1) to i32))
  %ptr_to_obj35 = bitcast i8* %malloccall34 to { { i64, void (i8*)*, i64 }, i64 }*
  %cast_to_i8ptr36 = bitcast { { i64, void (i8*)*, i64 }, i64 }* %ptr_to_obj35 to i8*
  %call_report_malloc37 = call i64 @report_malloc(i8* %cast_to_i8ptr36, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @name_of_obj.28, i32 0, i32 0))
  %ptr_to_control_block38 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i64 }, { { i64, void (i8*)*, i64 }, i64 }* %ptr_to_obj35, i32 0, i32 0
  %ptr_to_refcnt39 = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block38, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt39, align 4
  %ptr_to_dtor_field40 = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block38, i32 0, i32 1
  store void (i8*)* @dtor.29, void (i8*)** %ptr_to_dtor_field40, align 8
  %ptr_to_objid41 = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block38, i32 0, i32 2
  store i64 %call_report_malloc37, i64* %ptr_to_objid41, align 4
  %ptr_to_field42 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i64 }, { { i64, void (i8*)*, i64 }, i64 }* %ptr_to_obj35, i32 0, i32 1
  store i64 100, i64* %ptr_to_field42, align 4
  %ptr_ret_generate_expr43 = bitcast { { i64, void (i8*)*, i64 }, i64 }* %ptr_to_obj35 to i8*
  %ptr_to_lam_obj44 = bitcast i8* %call_lambda to { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }*
  %ptr_to_field45 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }* %ptr_to_lam_obj44, i32 0, i32 1
  %field_value46 = load i8* (i8*, i8*)*, i8* (i8*, i8*)** %ptr_to_field45, align 8
  %call_lambda47 = tail call i8* %field_value46(i8* %ptr_ret_generate_expr43, i8* %call_lambda)
  %int_obj_ptr = bitcast i8* %call_lambda47 to { { i64, void (i8*)*, i64 }, i64 }*
  %ptr_to_field48 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i64 }, { { i64, void (i8*)*, i64 }, i64 }* %int_obj_ptr, i32 0, i32 1
  %field_value49 = load i64, i64* %ptr_to_field48, align 4
  call void @release_obj(i8* %call_lambda47)
  call void @check_leak()
  ret i64 %field_value49
}

define i8* @lambda(i8* %0, i8* %1) {
entry:
  %closure_ptr = bitcast i8* %1 to { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }*
  call void @release_obj(i8* %1)
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }* getelementptr ({ { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }* null, i32 1) to i32))
  %ptr_to_obj = bitcast i8* %malloccall to { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }*
  %cast_to_i8ptr = bitcast { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj to i8*
  %call_report_malloc = call i64 @report_malloc(i8* %cast_to_i8ptr, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @name_of_obj, i32 0, i32 0))
  %ptr_to_control_block = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 0
  %ptr_to_refcnt = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt, align 4
  %ptr_to_dtor_field = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block, i32 0, i32 1
  store void (i8*)* @dtor, void (i8*)** %ptr_to_dtor_field, align 8
  %ptr_to_objid = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block, i32 0, i32 2
  store i64 %call_report_malloc, i64* %ptr_to_objid, align 4
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 1
  store i8* (i8*, i8*)* @lambda.1, i8* (i8*, i8*)** %ptr_to_field, align 8
  %ptr_to_field1 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 2
  store i8* %0, i8** %ptr_to_field1, align 8
  %ptr_ret_generate_expr = bitcast { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj to i8*
  ret i8* %ptr_ret_generate_expr
}

define i8* @lambda.1(i8* %0, i8* %1) {
entry:
  %closure_ptr = bitcast i8* %1 to { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }*
  %ptr_to_captured_field = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }* %closure_ptr, i32 0, i32 2
  %ptr_to_captured_obj = load i8*, i8** %ptr_to_captured_field, align 8
  call void @retain_obj(i8* %ptr_to_captured_obj)
  %ptr_to_lam_obj = bitcast i8* %ptr_to_captured_obj to { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }*
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }* %ptr_to_lam_obj, i32 0, i32 1
  %field_value = load i8* (i8*, i8*)*, i8* (i8*, i8*)** %ptr_to_field, align 8
  %call_lambda = tail call i8* %field_value(i8* %1, i8* %ptr_to_captured_obj)
  %ptr_to_lam_obj1 = bitcast i8* %call_lambda to { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }*
  %ptr_to_field2 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }* %ptr_to_lam_obj1, i32 0, i32 1
  %field_value3 = load i8* (i8*, i8*)*, i8* (i8*, i8*)** %ptr_to_field2, align 8
  %call_lambda4 = tail call i8* %field_value3(i8* %0, i8* %call_lambda)
  ret i8* %call_lambda4
}

declare noalias i8* @malloc(i32)

define void @dtor(i8* %0) {
entry:
  %ptr_to_obj = bitcast i8* %0 to { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }*
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 2
  %field_value = load i8*, i8** %ptr_to_field, align 8
  call void @release_obj(i8* %field_value)
  ret void
}

define void @dtor.3(i8* %0) {
entry:
  %ptr_to_obj = bitcast i8* %0 to { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }*
  ret void
}

define i8* @lambda.4(i8* %0, i8* %1) {
entry:
  %closure_ptr = bitcast i8* %1 to { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }*
  call void @release_obj(i8* %1)
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }* getelementptr ({ { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }* null, i32 1) to i32))
  %ptr_to_obj = bitcast i8* %malloccall to { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }*
  %cast_to_i8ptr = bitcast { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj to i8*
  %call_report_malloc = call i64 @report_malloc(i8* %cast_to_i8ptr, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @name_of_obj.8, i32 0, i32 0))
  %ptr_to_control_block = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 0
  %ptr_to_refcnt = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt, align 4
  %ptr_to_dtor_field = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block, i32 0, i32 1
  store void (i8*)* @dtor.9, void (i8*)** %ptr_to_dtor_field, align 8
  %ptr_to_objid = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block, i32 0, i32 2
  store i64 %call_report_malloc, i64* %ptr_to_objid, align 4
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 1
  store i8* (i8*, i8*)* @lambda.5, i8* (i8*, i8*)** %ptr_to_field, align 8
  %ptr_to_field1 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 2
  store i8* %0, i8** %ptr_to_field1, align 8
  %ptr_ret_generate_expr = bitcast { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj to i8*
  ret i8* %ptr_ret_generate_expr
}

define i8* @lambda.5(i8* %0, i8* %1) {
entry:
  %closure_ptr = bitcast i8* %1 to { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }*
  %ptr_to_captured_field = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }* %closure_ptr, i32 0, i32 2
  %ptr_to_captured_obj = load i8*, i8** %ptr_to_captured_field, align 8
  call void @retain_obj(i8* %ptr_to_captured_obj)
  call void @release_obj(i8* %1)
  %ptr_to_struct = bitcast i8* %ptr_to_captured_obj to { { i64, void (i8*)*, i64 }, i64 }*
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)*, i64 }, i64 }, { { i64, void (i8*)*, i64 }, i64 }* %ptr_to_struct, i32 0, i32 1
  %field_value = load i64, i64* %ptr_to_field, align 4
  %ptr_to_struct1 = bitcast i8* %0 to { { i64, void (i8*)*, i64 }, i64 }*
  %ptr_to_field2 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i64 }, { { i64, void (i8*)*, i64 }, i64 }* %ptr_to_struct1, i32 0, i32 1
  %field_value3 = load i64, i64* %ptr_to_field2, align 4
  %eq = icmp eq i64 %field_value, %field_value3
  %eq_bool = sext i1 %eq to i8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)*, i64 }, i8 }* getelementptr ({ { i64, void (i8*)*, i64 }, i8 }, { { i64, void (i8*)*, i64 }, i8 }* null, i32 1) to i32))
  %ptr_to_obj = bitcast i8* %malloccall to { { i64, void (i8*)*, i64 }, i8 }*
  %cast_to_i8ptr = bitcast { { i64, void (i8*)*, i64 }, i8 }* %ptr_to_obj to i8*
  %call_report_malloc = call i64 @report_malloc(i8* %cast_to_i8ptr, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @name_of_obj.6, i32 0, i32 0))
  %ptr_to_control_block = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8 }, { { i64, void (i8*)*, i64 }, i8 }* %ptr_to_obj, i32 0, i32 0
  %ptr_to_refcnt = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt, align 4
  %ptr_to_dtor_field = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block, i32 0, i32 1
  store void (i8*)* @dtor.7, void (i8*)** %ptr_to_dtor_field, align 8
  %ptr_to_objid = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block, i32 0, i32 2
  store i64 %call_report_malloc, i64* %ptr_to_objid, align 4
  %ptr_to_field4 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8 }, { { i64, void (i8*)*, i64 }, i8 }* %ptr_to_obj, i32 0, i32 1
  store i8 %eq_bool, i8* %ptr_to_field4, align 1
  call void @release_obj(i8* %ptr_to_captured_obj)
  call void @release_obj(i8* %0)
  %ptr_ret_generate_expr = bitcast { { i64, void (i8*)*, i64 }, i8 }* %ptr_to_obj to i8*
  ret i8* %ptr_ret_generate_expr
}

define void @dtor.7(i8* %0) {
entry:
  %ptr_to_obj = bitcast i8* %0 to { { i64, void (i8*)*, i64 }, i8 }*
  ret void
}

define void @dtor.9(i8* %0) {
entry:
  %ptr_to_obj = bitcast i8* %0 to { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }*
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 2
  %field_value = load i8*, i8** %ptr_to_field, align 8
  call void @release_obj(i8* %field_value)
  ret void
}

define i8* @lambda.11(i8* %0, i8* %1) {
entry:
  %closure_ptr = bitcast i8* %1 to { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }*
  call void @release_obj(i8* %1)
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }* getelementptr ({ { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }* null, i32 1) to i32))
  %ptr_to_obj = bitcast i8* %malloccall to { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }*
  %cast_to_i8ptr = bitcast { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj to i8*
  %call_report_malloc = call i64 @report_malloc(i8* %cast_to_i8ptr, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @name_of_obj.15, i32 0, i32 0))
  %ptr_to_control_block = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 0
  %ptr_to_refcnt = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt, align 4
  %ptr_to_dtor_field = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block, i32 0, i32 1
  store void (i8*)* @dtor.16, void (i8*)** %ptr_to_dtor_field, align 8
  %ptr_to_objid = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block, i32 0, i32 2
  store i64 %call_report_malloc, i64* %ptr_to_objid, align 4
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 1
  store i8* (i8*, i8*)* @lambda.12, i8* (i8*, i8*)** %ptr_to_field, align 8
  %ptr_to_field1 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 2
  store i8* %0, i8** %ptr_to_field1, align 8
  %ptr_ret_generate_expr = bitcast { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj to i8*
  ret i8* %ptr_ret_generate_expr
}

define i8* @lambda.12(i8* %0, i8* %1) {
entry:
  %closure_ptr = bitcast i8* %1 to { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }*
  %ptr_to_captured_field = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }* %closure_ptr, i32 0, i32 2
  %ptr_to_captured_obj = load i8*, i8** %ptr_to_captured_field, align 8
  call void @retain_obj(i8* %ptr_to_captured_obj)
  call void @release_obj(i8* %1)
  %ptr_to_struct = bitcast i8* %ptr_to_captured_obj to { { i64, void (i8*)*, i64 }, i64 }*
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)*, i64 }, i64 }, { { i64, void (i8*)*, i64 }, i64 }* %ptr_to_struct, i32 0, i32 1
  %field_value = load i64, i64* %ptr_to_field, align 4
  %ptr_to_struct1 = bitcast i8* %0 to { { i64, void (i8*)*, i64 }, i64 }*
  %ptr_to_field2 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i64 }, { { i64, void (i8*)*, i64 }, i64 }* %ptr_to_struct1, i32 0, i32 1
  %field_value3 = load i64, i64* %ptr_to_field2, align 4
  %add = add i64 %field_value, %field_value3
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)*, i64 }, i64 }* getelementptr ({ { i64, void (i8*)*, i64 }, i64 }, { { i64, void (i8*)*, i64 }, i64 }* null, i32 1) to i32))
  %ptr_to_obj = bitcast i8* %malloccall to { { i64, void (i8*)*, i64 }, i64 }*
  %cast_to_i8ptr = bitcast { { i64, void (i8*)*, i64 }, i64 }* %ptr_to_obj to i8*
  %call_report_malloc = call i64 @report_malloc(i8* %cast_to_i8ptr, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @name_of_obj.13, i32 0, i32 0))
  %ptr_to_control_block = getelementptr inbounds { { i64, void (i8*)*, i64 }, i64 }, { { i64, void (i8*)*, i64 }, i64 }* %ptr_to_obj, i32 0, i32 0
  %ptr_to_refcnt = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt, align 4
  %ptr_to_dtor_field = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block, i32 0, i32 1
  store void (i8*)* @dtor.14, void (i8*)** %ptr_to_dtor_field, align 8
  %ptr_to_objid = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block, i32 0, i32 2
  store i64 %call_report_malloc, i64* %ptr_to_objid, align 4
  %ptr_to_field4 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i64 }, { { i64, void (i8*)*, i64 }, i64 }* %ptr_to_obj, i32 0, i32 1
  store i64 %add, i64* %ptr_to_field4, align 4
  call void @release_obj(i8* %ptr_to_captured_obj)
  call void @release_obj(i8* %0)
  %ptr_ret_generate_expr = bitcast { { i64, void (i8*)*, i64 }, i64 }* %ptr_to_obj to i8*
  ret i8* %ptr_ret_generate_expr
}

define void @dtor.14(i8* %0) {
entry:
  %ptr_to_obj = bitcast i8* %0 to { { i64, void (i8*)*, i64 }, i64 }*
  ret void
}

define void @dtor.16(i8* %0) {
entry:
  %ptr_to_obj = bitcast i8* %0 to { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }*
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 2
  %field_value = load i8*, i8** %ptr_to_field, align 8
  call void @release_obj(i8* %field_value)
  ret void
}

define i8* @lambda.18(i8* %0, i8* %1) {
entry:
  %closure_ptr = bitcast i8* %1 to { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8* }*
  %ptr_to_captured_field = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8* }* %closure_ptr, i32 0, i32 2
  %ptr_to_captured_obj = load i8*, i8** %ptr_to_captured_field, align 8
  %ptr_to_captured_field1 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8* }* %closure_ptr, i32 0, i32 3
  %ptr_to_captured_obj2 = load i8*, i8** %ptr_to_captured_field1, align 8
  call void @retain_obj(i8* %ptr_to_captured_obj)
  call void @retain_obj(i8* %ptr_to_captured_obj2)
  call void @release_obj(i8* %1)
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8*, i8* }* getelementptr ({ { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8*, i8* }* null, i32 1) to i32))
  %ptr_to_obj = bitcast i8* %malloccall to { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8*, i8* }*
  %cast_to_i8ptr = bitcast { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8*, i8* }* %ptr_to_obj to i8*
  %call_report_malloc = call i64 @report_malloc(i8* %cast_to_i8ptr, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @name_of_obj.24, i32 0, i32 0))
  %ptr_to_control_block = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8*, i8* }* %ptr_to_obj, i32 0, i32 0
  %ptr_to_refcnt = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt, align 4
  %ptr_to_dtor_field = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block, i32 0, i32 1
  store void (i8*)* @dtor.25, void (i8*)** %ptr_to_dtor_field, align 8
  %ptr_to_objid = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block, i32 0, i32 2
  store i64 %call_report_malloc, i64* %ptr_to_objid, align 4
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8*, i8* }* %ptr_to_obj, i32 0, i32 1
  store i8* (i8*, i8*)* @lambda.19, i8* (i8*, i8*)** %ptr_to_field, align 8
  %ptr_to_field3 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8*, i8* }* %ptr_to_obj, i32 0, i32 2
  store i8* %ptr_to_captured_obj, i8** %ptr_to_field3, align 8
  %ptr_to_field4 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8*, i8* }* %ptr_to_obj, i32 0, i32 3
  store i8* %0, i8** %ptr_to_field4, align 8
  %ptr_to_field5 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8*, i8* }* %ptr_to_obj, i32 0, i32 4
  store i8* %ptr_to_captured_obj2, i8** %ptr_to_field5, align 8
  %ptr_ret_generate_expr = bitcast { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8*, i8* }* %ptr_to_obj to i8*
  ret i8* %ptr_ret_generate_expr
}

define i8* @lambda.19(i8* %0, i8* %1) {
entry:
  %closure_ptr = bitcast i8* %1 to { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8*, i8* }*
  %ptr_to_captured_field = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8*, i8* }* %closure_ptr, i32 0, i32 2
  %ptr_to_captured_obj = load i8*, i8** %ptr_to_captured_field, align 8
  %ptr_to_captured_field1 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8*, i8* }* %closure_ptr, i32 0, i32 3
  %ptr_to_captured_obj2 = load i8*, i8** %ptr_to_captured_field1, align 8
  %ptr_to_captured_field3 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8*, i8* }* %closure_ptr, i32 0, i32 4
  %ptr_to_captured_obj4 = load i8*, i8** %ptr_to_captured_field3, align 8
  call void @retain_obj(i8* %ptr_to_captured_obj)
  call void @retain_obj(i8* %ptr_to_captured_obj2)
  call void @retain_obj(i8* %ptr_to_captured_obj4)
  call void @release_obj(i8* %1)
  call void @retain_obj(i8* %0)
  %ptr_to_lam_obj = bitcast i8* %ptr_to_captured_obj4 to { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }*
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }* %ptr_to_lam_obj, i32 0, i32 1
  %field_value = load i8* (i8*, i8*)*, i8* (i8*, i8*)** %ptr_to_field, align 8
  %call_lambda = tail call i8* %field_value(i8* %0, i8* %ptr_to_captured_obj4)
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)*, i64 }, i64 }* getelementptr ({ { i64, void (i8*)*, i64 }, i64 }, { { i64, void (i8*)*, i64 }, i64 }* null, i32 1) to i32))
  %ptr_to_obj = bitcast i8* %malloccall to { { i64, void (i8*)*, i64 }, i64 }*
  %cast_to_i8ptr = bitcast { { i64, void (i8*)*, i64 }, i64 }* %ptr_to_obj to i8*
  %call_report_malloc = call i64 @report_malloc(i8* %cast_to_i8ptr, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @name_of_obj.20, i32 0, i32 0))
  %ptr_to_control_block = getelementptr inbounds { { i64, void (i8*)*, i64 }, i64 }, { { i64, void (i8*)*, i64 }, i64 }* %ptr_to_obj, i32 0, i32 0
  %ptr_to_refcnt = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt, align 4
  %ptr_to_dtor_field = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block, i32 0, i32 1
  store void (i8*)* @dtor.21, void (i8*)** %ptr_to_dtor_field, align 8
  %ptr_to_objid = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block, i32 0, i32 2
  store i64 %call_report_malloc, i64* %ptr_to_objid, align 4
  %ptr_to_field5 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i64 }, { { i64, void (i8*)*, i64 }, i64 }* %ptr_to_obj, i32 0, i32 1
  store i64 0, i64* %ptr_to_field5, align 4
  %ptr_ret_generate_expr = bitcast { { i64, void (i8*)*, i64 }, i64 }* %ptr_to_obj to i8*
  %ptr_to_lam_obj6 = bitcast i8* %call_lambda to { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }*
  %ptr_to_field7 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }* %ptr_to_lam_obj6, i32 0, i32 1
  %field_value8 = load i8* (i8*, i8*)*, i8* (i8*, i8*)** %ptr_to_field7, align 8
  %call_lambda9 = tail call i8* %field_value8(i8* %ptr_ret_generate_expr, i8* %call_lambda)
  %ptr_to_cond_obj = bitcast i8* %call_lambda9 to { { i64, void (i8*)*, i64 }, i8 }*
  %ptr_to_field10 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8 }, { { i64, void (i8*)*, i64 }, i8 }* %ptr_to_cond_obj, i32 0, i32 1
  %field_value11 = load i8, i8* %ptr_to_field10, align 1
  call void @release_obj(i8* %call_lambda9)
  %cond_val_i1 = trunc i8 %field_value11 to i1
  br i1 %cond_val_i1, label %then, label %else

then:                                             ; preds = %entry
  call void @release_obj(i8* %ptr_to_captured_obj)
  call void @release_obj(i8* %0)
  call void @release_obj(i8* %ptr_to_captured_obj2)
  %malloccall12 = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)*, i64 }, i64 }* getelementptr ({ { i64, void (i8*)*, i64 }, i64 }, { { i64, void (i8*)*, i64 }, i64 }* null, i32 1) to i32))
  %ptr_to_obj13 = bitcast i8* %malloccall12 to { { i64, void (i8*)*, i64 }, i64 }*
  %cast_to_i8ptr14 = bitcast { { i64, void (i8*)*, i64 }, i64 }* %ptr_to_obj13 to i8*
  %call_report_malloc15 = call i64 @report_malloc(i8* %cast_to_i8ptr14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @name_of_obj.22, i32 0, i32 0))
  %ptr_to_control_block16 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i64 }, { { i64, void (i8*)*, i64 }, i64 }* %ptr_to_obj13, i32 0, i32 0
  %ptr_to_refcnt17 = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block16, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt17, align 4
  %ptr_to_dtor_field18 = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block16, i32 0, i32 1
  store void (i8*)* @dtor.21, void (i8*)** %ptr_to_dtor_field18, align 8
  %ptr_to_objid19 = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block16, i32 0, i32 2
  store i64 %call_report_malloc15, i64* %ptr_to_objid19, align 4
  %ptr_to_field20 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i64 }, { { i64, void (i8*)*, i64 }, i64 }* %ptr_to_obj13, i32 0, i32 1
  store i64 0, i64* %ptr_to_field20, align 4
  %ptr_ret_generate_expr21 = bitcast { { i64, void (i8*)*, i64 }, i64 }* %ptr_to_obj13 to i8*
  br label %cont

else:                                             ; preds = %entry
  call void @retain_obj(i8* %ptr_to_captured_obj)
  call void @retain_obj(i8* %0)
  %ptr_to_lam_obj22 = bitcast i8* %ptr_to_captured_obj to { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }*
  %ptr_to_field23 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }* %ptr_to_lam_obj22, i32 0, i32 1
  %field_value24 = load i8* (i8*, i8*)*, i8* (i8*, i8*)** %ptr_to_field23, align 8
  %call_lambda25 = tail call i8* %field_value24(i8* %0, i8* %ptr_to_captured_obj)
  %ptr_to_lam_obj26 = bitcast i8* %ptr_to_captured_obj to { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }*
  %ptr_to_field27 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }* %ptr_to_lam_obj26, i32 0, i32 1
  %field_value28 = load i8* (i8*, i8*)*, i8* (i8*, i8*)** %ptr_to_field27, align 8
  %call_lambda29 = tail call i8* %field_value28(i8* %0, i8* %ptr_to_captured_obj)
  %malloccall30 = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)*, i64 }, i64 }* getelementptr ({ { i64, void (i8*)*, i64 }, i64 }, { { i64, void (i8*)*, i64 }, i64 }* null, i32 1) to i32))
  %ptr_to_obj31 = bitcast i8* %malloccall30 to { { i64, void (i8*)*, i64 }, i64 }*
  %cast_to_i8ptr32 = bitcast { { i64, void (i8*)*, i64 }, i64 }* %ptr_to_obj31 to i8*
  %call_report_malloc33 = call i64 @report_malloc(i8* %cast_to_i8ptr32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @name_of_obj.23, i32 0, i32 0))
  %ptr_to_control_block34 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i64 }, { { i64, void (i8*)*, i64 }, i64 }* %ptr_to_obj31, i32 0, i32 0
  %ptr_to_refcnt35 = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block34, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt35, align 4
  %ptr_to_dtor_field36 = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block34, i32 0, i32 1
  store void (i8*)* @dtor.21, void (i8*)** %ptr_to_dtor_field36, align 8
  %ptr_to_objid37 = getelementptr inbounds { i64, void (i8*)*, i64 }, { i64, void (i8*)*, i64 }* %ptr_to_control_block34, i32 0, i32 2
  store i64 %call_report_malloc33, i64* %ptr_to_objid37, align 4
  %ptr_to_field38 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i64 }, { { i64, void (i8*)*, i64 }, i64 }* %ptr_to_obj31, i32 0, i32 1
  store i64 -1, i64* %ptr_to_field38, align 4
  %ptr_ret_generate_expr39 = bitcast { { i64, void (i8*)*, i64 }, i64 }* %ptr_to_obj31 to i8*
  %ptr_to_lam_obj40 = bitcast i8* %call_lambda29 to { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }*
  %ptr_to_field41 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }* %ptr_to_lam_obj40, i32 0, i32 1
  %field_value42 = load i8* (i8*, i8*)*, i8* (i8*, i8*)** %ptr_to_field41, align 8
  %call_lambda43 = tail call i8* %field_value42(i8* %ptr_ret_generate_expr39, i8* %call_lambda29)
  %ptr_to_lam_obj44 = bitcast i8* %ptr_to_captured_obj2 to { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }*
  %ptr_to_field45 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }* %ptr_to_lam_obj44, i32 0, i32 1
  %field_value46 = load i8* (i8*, i8*)*, i8* (i8*, i8*)** %ptr_to_field45, align 8
  %call_lambda47 = tail call i8* %field_value46(i8* %call_lambda43, i8* %ptr_to_captured_obj2)
  %ptr_to_lam_obj48 = bitcast i8* %call_lambda25 to { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }*
  %ptr_to_field49 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)* }* %ptr_to_lam_obj48, i32 0, i32 1
  %field_value50 = load i8* (i8*, i8*)*, i8* (i8*, i8*)** %ptr_to_field49, align 8
  %call_lambda51 = tail call i8* %field_value50(i8* %call_lambda47, i8* %call_lambda25)
  br label %cont

cont:                                             ; preds = %else, %then
  %phi = phi i8* [ %ptr_ret_generate_expr21, %then ], [ %call_lambda51, %else ]
  ret i8* %phi
}

define void @dtor.21(i8* %0) {
entry:
  %ptr_to_obj = bitcast i8* %0 to { { i64, void (i8*)*, i64 }, i64 }*
  ret void
}

define void @dtor.25(i8* %0) {
entry:
  %ptr_to_obj = bitcast i8* %0 to { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8*, i8* }*
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8*, i8* }* %ptr_to_obj, i32 0, i32 2
  %field_value = load i8*, i8** %ptr_to_field, align 8
  call void @release_obj(i8* %field_value)
  %ptr_to_field1 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8*, i8* }* %ptr_to_obj, i32 0, i32 3
  %field_value2 = load i8*, i8** %ptr_to_field1, align 8
  call void @release_obj(i8* %field_value2)
  %ptr_to_field3 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8*, i8* }* %ptr_to_obj, i32 0, i32 4
  %field_value4 = load i8*, i8** %ptr_to_field3, align 8
  call void @release_obj(i8* %field_value4)
  ret void
}

define void @dtor.27(i8* %0) {
entry:
  %ptr_to_obj = bitcast i8* %0 to { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8* }*
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8* }* %ptr_to_obj, i32 0, i32 2
  %field_value = load i8*, i8** %ptr_to_field, align 8
  call void @release_obj(i8* %field_value)
  %ptr_to_field1 = getelementptr inbounds { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8* }, { { i64, void (i8*)*, i64 }, i8* (i8*, i8*)*, i8*, i8* }* %ptr_to_obj, i32 0, i32 3
  %field_value2 = load i8*, i8** %ptr_to_field1, align 8
  call void @release_obj(i8* %field_value2)
  ret void
}

define void @dtor.29(i8* %0) {
entry:
  %ptr_to_obj = bitcast i8* %0 to { { i64, void (i8*)*, i64 }, i64 }*
  ret void
}
