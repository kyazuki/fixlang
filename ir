; ModuleID = 'main'
source_filename = "main"

@int_placefolder = private unnamed_addr constant [6 x i8] c"%lld\0A\00", align 1
@debug_printf = private unnamed_addr constant [45 x i8] c"Release object whose refcnt is already zero.\00", align 1

define void @empty_destructor(i64* %0) {
entry:
  ret void
}

declare i32 @printf(i8*, ...)

define void @print_int_obj({ { i64, void (i8*)* }, i64 }* %0) {
entry:
  %int_field_ptr = getelementptr inbounds { { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* %0, i32 0, i32 1
  %int_val = load i64, i64* %int_field_ptr, align 4
  %call_print_int = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @int_placefolder, i32 0, i32 0), i64 %int_val)
  ret void
}

define void @retain_obj(i8* %0) {
entry:
  %ptr_to_control_block = bitcast i8* %0 to { i64, void (i8*)* }*
  %ptr_to_refcnt = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 0
  %refcnt = load i64, i64* %ptr_to_refcnt, align 4
  %refcnt1 = add i64 %refcnt, 1
  store i64 %refcnt1, i64* %ptr_to_refcnt, align 4
  ret void
}

define void @release_obj(i8* %0) {
entry:
  %ptr_to_control_block = bitcast i8* %0 to { i64, void (i8*)* }*
  %ptr_to_refcnt = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 0
  %refcnt = load i64, i64* %ptr_to_refcnt, align 4
  %is_refcnt_positive = icmp ule i64 %refcnt, 0
  br i1 %is_refcnt_positive, label %error_refcnt_already_leq_zero, label %refcnt_positive

error_refcnt_already_leq_zero:                    ; preds = %entry
  %build_debug_printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @debug_printf, i32 0, i32 0))
  br label %refcnt_positive

refcnt_positive:                                  ; preds = %error_refcnt_already_leq_zero, %entry
  %refcnt1 = sub i64 %refcnt, 1
  %is_refcnt_zero = icmp eq i64 %refcnt1, 0
  br i1 %is_refcnt_zero, label %refcnt_zero_after_release, label %end

refcnt_zero_after_release:                        ; preds = %refcnt_positive
  %ptr_to_dtor_ptr = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 1
  %ptr_to_dtor = load void (i8*)*, void (i8*)** %ptr_to_dtor_ptr, align 8
  call void %ptr_to_dtor(i8* %0)
  %1 = bitcast i64* %ptr_to_refcnt to i8*
  tail call void @free(i8* %1)
  br label %end

end:                                              ; preds = %refcnt_zero_after_release, %refcnt_positive
  ret void
}

declare void @free(i8*)

define i32 @main() {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)* }, i8* (i8*, i8*)* }* getelementptr ({ { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* null, i32 1) to i32))
  %ptr_to_obj = bitcast i8* %malloccall to { { i64, void (i8*)* }, i8* (i8*, i8*)* }*
  %ptr_to_control_block = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_obj, i32 0, i32 0
  %ptr_to_refcnt = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt, align 4
  %ptr_to_dtor_field = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 1
  store void (i8*)* @dtor.2, void (i8*)** %ptr_to_dtor_field, align 8
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_obj, i32 0, i32 1
  store i8* (i8*, i8*)* @lambda, i8* (i8*, i8*)** %ptr_to_field, align 8
  %ptr_ret_generate_expr = bitcast { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_obj to i8*
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)* }, i8* (i8*, i8*)* }* getelementptr ({ { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* null, i32 1) to i32))
  %ptr_to_obj2 = bitcast i8* %malloccall1 to { { i64, void (i8*)* }, i8* (i8*, i8*)* }*
  %ptr_to_control_block3 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_obj2, i32 0, i32 0
  %ptr_to_refcnt4 = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block3, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt4, align 4
  %ptr_to_dtor_field5 = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block3, i32 0, i32 1
  store void (i8*)* @dtor.2, void (i8*)** %ptr_to_dtor_field5, align 8
  %ptr_to_field6 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_obj2, i32 0, i32 1
  store i8* (i8*, i8*)* @lambda.3, i8* (i8*, i8*)** %ptr_to_field6, align 8
  %ptr_ret_generate_expr7 = bitcast { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_obj2 to i8*
  %malloccall8 = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)* }, i8* (i8*, i8*)* }* getelementptr ({ { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* null, i32 1) to i32))
  %ptr_to_obj9 = bitcast i8* %malloccall8 to { { i64, void (i8*)* }, i8* (i8*, i8*)* }*
  %ptr_to_control_block10 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_obj9, i32 0, i32 0
  %ptr_to_refcnt11 = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block10, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt11, align 4
  %ptr_to_dtor_field12 = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block10, i32 0, i32 1
  store void (i8*)* @dtor.2, void (i8*)** %ptr_to_dtor_field12, align 8
  %ptr_to_field13 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_obj9, i32 0, i32 1
  store i8* (i8*, i8*)* @lambda.7, i8* (i8*, i8*)** %ptr_to_field13, align 8
  %ptr_ret_generate_expr14 = bitcast { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_obj9 to i8*
  %malloccall15 = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8* }* getelementptr ({ { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8* }* null, i32 1) to i32))
  %ptr_to_obj16 = bitcast i8* %malloccall15 to { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8* }*
  %ptr_to_control_block17 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8* }* %ptr_to_obj16, i32 0, i32 0
  %ptr_to_refcnt18 = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block17, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt18, align 4
  %ptr_to_dtor_field19 = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block17, i32 0, i32 1
  store void (i8*)* @dtor.17, void (i8*)** %ptr_to_dtor_field19, align 8
  %ptr_to_field20 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8* }* %ptr_to_obj16, i32 0, i32 1
  store i8* (i8*, i8*)* @lambda.11, i8* (i8*, i8*)** %ptr_to_field20, align 8
  %ptr_to_field21 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8* }* %ptr_to_obj16, i32 0, i32 2
  store i8* %ptr_ret_generate_expr7, i8** %ptr_to_field21, align 8
  %ptr_to_field22 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8* }* %ptr_to_obj16, i32 0, i32 3
  store i8* %ptr_ret_generate_expr14, i8** %ptr_to_field22, align 8
  %ptr_ret_generate_expr23 = bitcast { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8* }* %ptr_to_obj16 to i8*
  %ptr_to_lam_obj = bitcast i8* %ptr_ret_generate_expr to { { i64, void (i8*)* }, i8* (i8*, i8*)* }*
  %ptr_to_field24 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_lam_obj, i32 0, i32 1
  %field_value = load i8* (i8*, i8*)*, i8* (i8*, i8*)** %ptr_to_field24, align 8
  %call_lambda = tail call i8* %field_value(i8* %ptr_ret_generate_expr23, i8* %ptr_ret_generate_expr)
  %malloccall25 = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)* }, i64 }* getelementptr ({ { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* null, i32 1) to i32))
  %ptr_to_obj26 = bitcast i8* %malloccall25 to { { i64, void (i8*)* }, i64 }*
  %ptr_to_control_block27 = getelementptr inbounds { { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* %ptr_to_obj26, i32 0, i32 0
  %ptr_to_refcnt28 = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block27, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt28, align 4
  %ptr_to_dtor_field29 = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block27, i32 0, i32 1
  store void (i8*)* @dtor.18, void (i8*)** %ptr_to_dtor_field29, align 8
  %ptr_to_field30 = getelementptr inbounds { { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* %ptr_to_obj26, i32 0, i32 1
  store i64 0, i64* %ptr_to_field30, align 4
  %ptr_ret_generate_expr31 = bitcast { { i64, void (i8*)* }, i64 }* %ptr_to_obj26 to i8*
  %ptr_to_lam_obj32 = bitcast i8* %call_lambda to { { i64, void (i8*)* }, i8* (i8*, i8*)* }*
  %ptr_to_field33 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_lam_obj32, i32 0, i32 1
  %field_value34 = load i8* (i8*, i8*)*, i8* (i8*, i8*)** %ptr_to_field33, align 8
  %call_lambda35 = tail call i8* %field_value34(i8* %ptr_ret_generate_expr31, i8* %call_lambda)
  %malloccall36 = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)* }, i64 }* getelementptr ({ { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* null, i32 1) to i32))
  %ptr_to_obj37 = bitcast i8* %malloccall36 to { { i64, void (i8*)* }, i64 }*
  %ptr_to_control_block38 = getelementptr inbounds { { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* %ptr_to_obj37, i32 0, i32 0
  %ptr_to_refcnt39 = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block38, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt39, align 4
  %ptr_to_dtor_field40 = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block38, i32 0, i32 1
  store void (i8*)* @dtor.18, void (i8*)** %ptr_to_dtor_field40, align 8
  %ptr_to_field41 = getelementptr inbounds { { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* %ptr_to_obj37, i32 0, i32 1
  store i64 46340, i64* %ptr_to_field41, align 4
  %ptr_ret_generate_expr42 = bitcast { { i64, void (i8*)* }, i64 }* %ptr_to_obj37 to i8*
  %ptr_to_lam_obj43 = bitcast i8* %call_lambda35 to { { i64, void (i8*)* }, i8* (i8*, i8*)* }*
  %ptr_to_field44 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_lam_obj43, i32 0, i32 1
  %field_value45 = load i8* (i8*, i8*)*, i8* (i8*, i8*)** %ptr_to_field44, align 8
  %call_lambda46 = tail call i8* %field_value45(i8* %ptr_ret_generate_expr42, i8* %call_lambda35)
  %int_obj_ptr = bitcast i8* %call_lambda46 to { { i64, void (i8*)* }, i64 }*
  %ptr_to_field47 = getelementptr inbounds { { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* %int_obj_ptr, i32 0, i32 1
  %field_value48 = load i64, i64* %ptr_to_field47, align 4
  %ret = trunc i64 %field_value48 to i32
  ret i32 %ret
}

define i8* @lambda(i8* %0, i8* %1) {
entry:
  %closure_ptr = bitcast i8* %1 to { { i64, void (i8*)* }, i8* (i8*, i8*)* }*
  call void @release_obj(i8* %1)
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* getelementptr ({ { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* null, i32 1) to i32))
  %ptr_to_obj = bitcast i8* %malloccall to { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }*
  %ptr_to_control_block = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 0
  %ptr_to_refcnt = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt, align 4
  %ptr_to_dtor_field = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 1
  store void (i8*)* @dtor, void (i8*)** %ptr_to_dtor_field, align 8
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 1
  store i8* (i8*, i8*)* @lambda.1, i8* (i8*, i8*)** %ptr_to_field, align 8
  %ptr_to_field1 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 2
  store i8* %0, i8** %ptr_to_field1, align 8
  %ptr_ret_generate_expr = bitcast { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj to i8*
  ret i8* %ptr_ret_generate_expr
}

define i8* @lambda.1(i8* %0, i8* %1) {
entry:
  %closure_ptr = bitcast i8* %1 to { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }*
  %ptr_to_captured_field = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %closure_ptr, i32 0, i32 2
  %ptr_to_captured_obj = load i8*, i8** %ptr_to_captured_field, align 8
  call void @retain_obj(i8* %ptr_to_captured_obj)
  %ptr_to_lam_obj = bitcast i8* %ptr_to_captured_obj to { { i64, void (i8*)* }, i8* (i8*, i8*)* }*
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_lam_obj, i32 0, i32 1
  %field_value = load i8* (i8*, i8*)*, i8* (i8*, i8*)** %ptr_to_field, align 8
  %call_lambda = tail call i8* %field_value(i8* %1, i8* %ptr_to_captured_obj)
  %ptr_to_lam_obj1 = bitcast i8* %call_lambda to { { i64, void (i8*)* }, i8* (i8*, i8*)* }*
  %ptr_to_field2 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_lam_obj1, i32 0, i32 1
  %field_value3 = load i8* (i8*, i8*)*, i8* (i8*, i8*)** %ptr_to_field2, align 8
  %call_lambda4 = tail call i8* %field_value3(i8* %0, i8* %call_lambda)
  ret i8* %call_lambda4
}

declare noalias i8* @malloc(i32)

define void @dtor(i8* %0) {
entry:
  %ptr_to_obj = bitcast i8* %0 to { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }*
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 2
  %field_value = load i8*, i8** %ptr_to_field, align 8
  call void @release_obj(i8* %field_value)
  ret void
}

define void @dtor.2(i8* %0) {
entry:
  %ptr_to_obj = bitcast i8* %0 to { { i64, void (i8*)* }, i8* (i8*, i8*)* }*
  ret void
}

define i8* @lambda.3(i8* %0, i8* %1) {
entry:
  %closure_ptr = bitcast i8* %1 to { { i64, void (i8*)* }, i8* (i8*, i8*)* }*
  call void @release_obj(i8* %1)
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* getelementptr ({ { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* null, i32 1) to i32))
  %ptr_to_obj = bitcast i8* %malloccall to { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }*
  %ptr_to_control_block = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 0
  %ptr_to_refcnt = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt, align 4
  %ptr_to_dtor_field = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 1
  store void (i8*)* @dtor.6, void (i8*)** %ptr_to_dtor_field, align 8
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 1
  store i8* (i8*, i8*)* @lambda.4, i8* (i8*, i8*)** %ptr_to_field, align 8
  %ptr_to_field1 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 2
  store i8* %0, i8** %ptr_to_field1, align 8
  %ptr_ret_generate_expr = bitcast { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj to i8*
  ret i8* %ptr_ret_generate_expr
}

define i8* @lambda.4(i8* %0, i8* %1) {
entry:
  %closure_ptr = bitcast i8* %1 to { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }*
  %ptr_to_captured_field = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %closure_ptr, i32 0, i32 2
  %ptr_to_captured_obj = load i8*, i8** %ptr_to_captured_field, align 8
  call void @retain_obj(i8* %ptr_to_captured_obj)
  call void @release_obj(i8* %1)
  %ptr_to_struct = bitcast i8* %ptr_to_captured_obj to { { i64, void (i8*)* }, i64 }*
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* %ptr_to_struct, i32 0, i32 1
  %field_value = load i64, i64* %ptr_to_field, align 4
  %ptr_to_struct1 = bitcast i8* %0 to { { i64, void (i8*)* }, i64 }*
  %ptr_to_field2 = getelementptr inbounds { { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* %ptr_to_struct1, i32 0, i32 1
  %field_value3 = load i64, i64* %ptr_to_field2, align 4
  %eq = icmp eq i64 %field_value, %field_value3
  %eq_bool = sext i1 %eq to i8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)* }, i8 }* getelementptr ({ { i64, void (i8*)* }, i8 }, { { i64, void (i8*)* }, i8 }* null, i32 1) to i32))
  %ptr_to_obj = bitcast i8* %malloccall to { { i64, void (i8*)* }, i8 }*
  %ptr_to_control_block = getelementptr inbounds { { i64, void (i8*)* }, i8 }, { { i64, void (i8*)* }, i8 }* %ptr_to_obj, i32 0, i32 0
  %ptr_to_refcnt = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt, align 4
  %ptr_to_dtor_field = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 1
  store void (i8*)* @dtor.5, void (i8*)** %ptr_to_dtor_field, align 8
  %ptr_to_field4 = getelementptr inbounds { { i64, void (i8*)* }, i8 }, { { i64, void (i8*)* }, i8 }* %ptr_to_obj, i32 0, i32 1
  store i8 %eq_bool, i8* %ptr_to_field4, align 1
  call void @release_obj(i8* %ptr_to_captured_obj)
  call void @release_obj(i8* %0)
  %ptr_ret_generate_expr = bitcast { { i64, void (i8*)* }, i8 }* %ptr_to_obj to i8*
  ret i8* %ptr_ret_generate_expr
}

define void @dtor.5(i8* %0) {
entry:
  %ptr_to_obj = bitcast i8* %0 to { { i64, void (i8*)* }, i8 }*
  ret void
}

define void @dtor.6(i8* %0) {
entry:
  %ptr_to_obj = bitcast i8* %0 to { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }*
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 2
  %field_value = load i8*, i8** %ptr_to_field, align 8
  call void @release_obj(i8* %field_value)
  ret void
}

define i8* @lambda.7(i8* %0, i8* %1) {
entry:
  %closure_ptr = bitcast i8* %1 to { { i64, void (i8*)* }, i8* (i8*, i8*)* }*
  call void @release_obj(i8* %1)
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* getelementptr ({ { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* null, i32 1) to i32))
  %ptr_to_obj = bitcast i8* %malloccall to { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }*
  %ptr_to_control_block = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 0
  %ptr_to_refcnt = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt, align 4
  %ptr_to_dtor_field = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 1
  store void (i8*)* @dtor.10, void (i8*)** %ptr_to_dtor_field, align 8
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 1
  store i8* (i8*, i8*)* @lambda.8, i8* (i8*, i8*)** %ptr_to_field, align 8
  %ptr_to_field1 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 2
  store i8* %0, i8** %ptr_to_field1, align 8
  %ptr_ret_generate_expr = bitcast { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj to i8*
  ret i8* %ptr_ret_generate_expr
}

define i8* @lambda.8(i8* %0, i8* %1) {
entry:
  %closure_ptr = bitcast i8* %1 to { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }*
  %ptr_to_captured_field = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %closure_ptr, i32 0, i32 2
  %ptr_to_captured_obj = load i8*, i8** %ptr_to_captured_field, align 8
  call void @retain_obj(i8* %ptr_to_captured_obj)
  call void @release_obj(i8* %1)
  %ptr_to_struct = bitcast i8* %ptr_to_captured_obj to { { i64, void (i8*)* }, i64 }*
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* %ptr_to_struct, i32 0, i32 1
  %field_value = load i64, i64* %ptr_to_field, align 4
  %ptr_to_struct1 = bitcast i8* %0 to { { i64, void (i8*)* }, i64 }*
  %ptr_to_field2 = getelementptr inbounds { { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* %ptr_to_struct1, i32 0, i32 1
  %field_value3 = load i64, i64* %ptr_to_field2, align 4
  %add = add i64 %field_value, %field_value3
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)* }, i64 }* getelementptr ({ { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* null, i32 1) to i32))
  %ptr_to_obj = bitcast i8* %malloccall to { { i64, void (i8*)* }, i64 }*
  %ptr_to_control_block = getelementptr inbounds { { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* %ptr_to_obj, i32 0, i32 0
  %ptr_to_refcnt = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt, align 4
  %ptr_to_dtor_field = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 1
  store void (i8*)* @dtor.9, void (i8*)** %ptr_to_dtor_field, align 8
  %ptr_to_field4 = getelementptr inbounds { { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* %ptr_to_obj, i32 0, i32 1
  store i64 %add, i64* %ptr_to_field4, align 4
  call void @release_obj(i8* %ptr_to_captured_obj)
  call void @release_obj(i8* %0)
  %ptr_ret_generate_expr = bitcast { { i64, void (i8*)* }, i64 }* %ptr_to_obj to i8*
  ret i8* %ptr_ret_generate_expr
}

define void @dtor.9(i8* %0) {
entry:
  %ptr_to_obj = bitcast i8* %0 to { { i64, void (i8*)* }, i64 }*
  ret void
}

define void @dtor.10(i8* %0) {
entry:
  %ptr_to_obj = bitcast i8* %0 to { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }*
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 2
  %field_value = load i8*, i8** %ptr_to_field, align 8
  call void @release_obj(i8* %field_value)
  ret void
}

define i8* @lambda.11(i8* %0, i8* %1) {
entry:
  %closure_ptr = bitcast i8* %1 to { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8* }*
  %ptr_to_captured_field = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8* }* %closure_ptr, i32 0, i32 2
  %ptr_to_captured_obj = load i8*, i8** %ptr_to_captured_field, align 8
  %ptr_to_captured_field1 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8* }* %closure_ptr, i32 0, i32 3
  %ptr_to_captured_obj2 = load i8*, i8** %ptr_to_captured_field1, align 8
  call void @retain_obj(i8* %ptr_to_captured_obj)
  call void @retain_obj(i8* %ptr_to_captured_obj2)
  call void @release_obj(i8* %1)
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8* }* getelementptr ({ { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8* }* null, i32 1) to i32))
  %ptr_to_obj = bitcast i8* %malloccall to { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8* }*
  %ptr_to_control_block = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8* }* %ptr_to_obj, i32 0, i32 0
  %ptr_to_refcnt = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt, align 4
  %ptr_to_dtor_field = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 1
  store void (i8*)* @dtor.16, void (i8*)** %ptr_to_dtor_field, align 8
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8* }* %ptr_to_obj, i32 0, i32 1
  store i8* (i8*, i8*)* @lambda.12, i8* (i8*, i8*)** %ptr_to_field, align 8
  %ptr_to_field3 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8* }* %ptr_to_obj, i32 0, i32 2
  store i8* %0, i8** %ptr_to_field3, align 8
  %ptr_to_field4 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8* }* %ptr_to_obj, i32 0, i32 3
  store i8* %ptr_to_captured_obj, i8** %ptr_to_field4, align 8
  %ptr_to_field5 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8* }* %ptr_to_obj, i32 0, i32 4
  store i8* %ptr_to_captured_obj2, i8** %ptr_to_field5, align 8
  %ptr_ret_generate_expr = bitcast { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8* }* %ptr_to_obj to i8*
  ret i8* %ptr_ret_generate_expr
}

define i8* @lambda.12(i8* %0, i8* %1) {
entry:
  %closure_ptr = bitcast i8* %1 to { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8* }*
  %ptr_to_captured_field = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8* }* %closure_ptr, i32 0, i32 2
  %ptr_to_captured_obj = load i8*, i8** %ptr_to_captured_field, align 8
  %ptr_to_captured_field1 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8* }* %closure_ptr, i32 0, i32 3
  %ptr_to_captured_obj2 = load i8*, i8** %ptr_to_captured_field1, align 8
  %ptr_to_captured_field3 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8* }* %closure_ptr, i32 0, i32 4
  %ptr_to_captured_obj4 = load i8*, i8** %ptr_to_captured_field3, align 8
  call void @retain_obj(i8* %ptr_to_captured_obj)
  call void @retain_obj(i8* %ptr_to_captured_obj2)
  call void @retain_obj(i8* %ptr_to_captured_obj4)
  call void @release_obj(i8* %1)
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }* getelementptr ({ { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }* null, i32 1) to i32))
  %ptr_to_obj = bitcast i8* %malloccall to { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }*
  %ptr_to_control_block = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }* %ptr_to_obj, i32 0, i32 0
  %ptr_to_refcnt = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt, align 4
  %ptr_to_dtor_field = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 1
  store void (i8*)* @dtor.15, void (i8*)** %ptr_to_dtor_field, align 8
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }* %ptr_to_obj, i32 0, i32 1
  store i8* (i8*, i8*)* @lambda.13, i8* (i8*, i8*)** %ptr_to_field, align 8
  %ptr_to_field5 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }* %ptr_to_obj, i32 0, i32 2
  store i8* %ptr_to_captured_obj, i8** %ptr_to_field5, align 8
  %ptr_to_field6 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }* %ptr_to_obj, i32 0, i32 3
  store i8* %ptr_to_captured_obj2, i8** %ptr_to_field6, align 8
  %ptr_to_field7 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }* %ptr_to_obj, i32 0, i32 4
  store i8* %ptr_to_captured_obj4, i8** %ptr_to_field7, align 8
  %ptr_to_field8 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }* %ptr_to_obj, i32 0, i32 5
  store i8* %0, i8** %ptr_to_field8, align 8
  %ptr_ret_generate_expr = bitcast { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }* %ptr_to_obj to i8*
  ret i8* %ptr_ret_generate_expr
}

define i8* @lambda.13(i8* %0, i8* %1) {
entry:
  %closure_ptr = bitcast i8* %1 to { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }*
  %ptr_to_captured_field = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }* %closure_ptr, i32 0, i32 2
  %ptr_to_captured_obj = load i8*, i8** %ptr_to_captured_field, align 8
  %ptr_to_captured_field1 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }* %closure_ptr, i32 0, i32 3
  %ptr_to_captured_obj2 = load i8*, i8** %ptr_to_captured_field1, align 8
  %ptr_to_captured_field3 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }* %closure_ptr, i32 0, i32 4
  %ptr_to_captured_obj4 = load i8*, i8** %ptr_to_captured_field3, align 8
  %ptr_to_captured_field5 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }* %closure_ptr, i32 0, i32 5
  %ptr_to_captured_obj6 = load i8*, i8** %ptr_to_captured_field5, align 8
  call void @retain_obj(i8* %ptr_to_captured_obj)
  call void @retain_obj(i8* %ptr_to_captured_obj2)
  call void @retain_obj(i8* %ptr_to_captured_obj4)
  call void @retain_obj(i8* %ptr_to_captured_obj6)
  call void @release_obj(i8* %1)
  call void @retain_obj(i8* %0)
  %ptr_to_lam_obj = bitcast i8* %ptr_to_captured_obj2 to { { i64, void (i8*)* }, i8* (i8*, i8*)* }*
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_lam_obj, i32 0, i32 1
  %field_value = load i8* (i8*, i8*)*, i8* (i8*, i8*)** %ptr_to_field, align 8
  %call_lambda = tail call i8* %field_value(i8* %0, i8* %ptr_to_captured_obj2)
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)* }, i64 }* getelementptr ({ { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* null, i32 1) to i32))
  %ptr_to_obj = bitcast i8* %malloccall to { { i64, void (i8*)* }, i64 }*
  %ptr_to_control_block = getelementptr inbounds { { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* %ptr_to_obj, i32 0, i32 0
  %ptr_to_refcnt = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt, align 4
  %ptr_to_dtor_field = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 1
  store void (i8*)* @dtor.14, void (i8*)** %ptr_to_dtor_field, align 8
  %ptr_to_field7 = getelementptr inbounds { { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* %ptr_to_obj, i32 0, i32 1
  store i64 0, i64* %ptr_to_field7, align 4
  %ptr_ret_generate_expr = bitcast { { i64, void (i8*)* }, i64 }* %ptr_to_obj to i8*
  %ptr_to_lam_obj8 = bitcast i8* %call_lambda to { { i64, void (i8*)* }, i8* (i8*, i8*)* }*
  %ptr_to_field9 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_lam_obj8, i32 0, i32 1
  %field_value10 = load i8* (i8*, i8*)*, i8* (i8*, i8*)** %ptr_to_field9, align 8
  %call_lambda11 = tail call i8* %field_value10(i8* %ptr_ret_generate_expr, i8* %call_lambda)
  %ptr_to_cond_obj = bitcast i8* %call_lambda11 to { { i64, void (i8*)* }, i8 }*
  %ptr_to_field12 = getelementptr inbounds { { i64, void (i8*)* }, i8 }, { { i64, void (i8*)* }, i8 }* %ptr_to_cond_obj, i32 0, i32 1
  %field_value13 = load i8, i8* %ptr_to_field12, align 1
  %cond_val_i1 = trunc i8 %field_value13 to i1
  br i1 %cond_val_i1, label %then, label %else

then:                                             ; preds = %entry
  call void @release_obj(i8* %0)
  call void @release_obj(i8* %ptr_to_captured_obj4)
  call void @release_obj(i8* %ptr_to_captured_obj)
  br label %cont

else:                                             ; preds = %entry
  call void @retain_obj(i8* %ptr_to_captured_obj4)
  %ptr_to_lam_obj14 = bitcast i8* %ptr_to_captured_obj4 to { { i64, void (i8*)* }, i8* (i8*, i8*)* }*
  %ptr_to_field15 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_lam_obj14, i32 0, i32 1
  %field_value16 = load i8* (i8*, i8*)*, i8* (i8*, i8*)** %ptr_to_field15, align 8
  %call_lambda17 = tail call i8* %field_value16(i8* %ptr_to_captured_obj6, i8* %ptr_to_captured_obj4)
  call void @retain_obj(i8* %0)
  %ptr_to_lam_obj18 = bitcast i8* %call_lambda17 to { { i64, void (i8*)* }, i8* (i8*, i8*)* }*
  %ptr_to_field19 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_lam_obj18, i32 0, i32 1
  %field_value20 = load i8* (i8*, i8*)*, i8* (i8*, i8*)** %ptr_to_field19, align 8
  %call_lambda21 = tail call i8* %field_value20(i8* %0, i8* %call_lambda17)
  %ptr_to_lam_obj22 = bitcast i8* %ptr_to_captured_obj4 to { { i64, void (i8*)* }, i8* (i8*, i8*)* }*
  %ptr_to_field23 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_lam_obj22, i32 0, i32 1
  %field_value24 = load i8* (i8*, i8*)*, i8* (i8*, i8*)** %ptr_to_field23, align 8
  %call_lambda25 = tail call i8* %field_value24(i8* %0, i8* %ptr_to_captured_obj4)
  %malloccall26 = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)* }, i64 }* getelementptr ({ { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* null, i32 1) to i32))
  %ptr_to_obj27 = bitcast i8* %malloccall26 to { { i64, void (i8*)* }, i64 }*
  %ptr_to_control_block28 = getelementptr inbounds { { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* %ptr_to_obj27, i32 0, i32 0
  %ptr_to_refcnt29 = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block28, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt29, align 4
  %ptr_to_dtor_field30 = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block28, i32 0, i32 1
  store void (i8*)* @dtor.14, void (i8*)** %ptr_to_dtor_field30, align 8
  %ptr_to_field31 = getelementptr inbounds { { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* %ptr_to_obj27, i32 0, i32 1
  store i64 -1, i64* %ptr_to_field31, align 4
  %ptr_ret_generate_expr32 = bitcast { { i64, void (i8*)* }, i64 }* %ptr_to_obj27 to i8*
  %ptr_to_lam_obj33 = bitcast i8* %call_lambda25 to { { i64, void (i8*)* }, i8* (i8*, i8*)* }*
  %ptr_to_field34 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_lam_obj33, i32 0, i32 1
  %field_value35 = load i8* (i8*, i8*)*, i8* (i8*, i8*)** %ptr_to_field34, align 8
  %call_lambda36 = tail call i8* %field_value35(i8* %ptr_ret_generate_expr32, i8* %call_lambda25)
  %ptr_to_lam_obj37 = bitcast i8* %ptr_to_captured_obj to { { i64, void (i8*)* }, i8* (i8*, i8*)* }*
  %ptr_to_field38 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_lam_obj37, i32 0, i32 1
  %field_value39 = load i8* (i8*, i8*)*, i8* (i8*, i8*)** %ptr_to_field38, align 8
  %call_lambda40 = tail call i8* %field_value39(i8* %call_lambda21, i8* %ptr_to_captured_obj)
  %ptr_to_lam_obj41 = bitcast i8* %call_lambda40 to { { i64, void (i8*)* }, i8* (i8*, i8*)* }*
  %ptr_to_field42 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_lam_obj41, i32 0, i32 1
  %field_value43 = load i8* (i8*, i8*)*, i8* (i8*, i8*)** %ptr_to_field42, align 8
  %call_lambda44 = tail call i8* %field_value43(i8* %call_lambda36, i8* %call_lambda40)
  br label %cont

cont:                                             ; preds = %else, %then
  %phi = phi i8* [ %ptr_to_captured_obj6, %then ], [ %call_lambda44, %else ]
  ret i8* %phi
}

define void @dtor.14(i8* %0) {
entry:
  %ptr_to_obj = bitcast i8* %0 to { { i64, void (i8*)* }, i64 }*
  ret void
}

define void @dtor.15(i8* %0) {
entry:
  %ptr_to_obj = bitcast i8* %0 to { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }*
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }* %ptr_to_obj, i32 0, i32 2
  %field_value = load i8*, i8** %ptr_to_field, align 8
  call void @release_obj(i8* %field_value)
  %ptr_to_field1 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }* %ptr_to_obj, i32 0, i32 3
  %field_value2 = load i8*, i8** %ptr_to_field1, align 8
  call void @release_obj(i8* %field_value2)
  %ptr_to_field3 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }* %ptr_to_obj, i32 0, i32 4
  %field_value4 = load i8*, i8** %ptr_to_field3, align 8
  call void @release_obj(i8* %field_value4)
  %ptr_to_field5 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8*, i8* }* %ptr_to_obj, i32 0, i32 5
  %field_value6 = load i8*, i8** %ptr_to_field5, align 8
  call void @release_obj(i8* %field_value6)
  ret void
}

define void @dtor.16(i8* %0) {
entry:
  %ptr_to_obj = bitcast i8* %0 to { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8* }*
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8* }* %ptr_to_obj, i32 0, i32 2
  %field_value = load i8*, i8** %ptr_to_field, align 8
  call void @release_obj(i8* %field_value)
  %ptr_to_field1 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8* }* %ptr_to_obj, i32 0, i32 3
  %field_value2 = load i8*, i8** %ptr_to_field1, align 8
  call void @release_obj(i8* %field_value2)
  %ptr_to_field3 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8*, i8* }* %ptr_to_obj, i32 0, i32 4
  %field_value4 = load i8*, i8** %ptr_to_field3, align 8
  call void @release_obj(i8* %field_value4)
  ret void
}

define void @dtor.17(i8* %0) {
entry:
  %ptr_to_obj = bitcast i8* %0 to { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8* }*
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8* }* %ptr_to_obj, i32 0, i32 2
  %field_value = load i8*, i8** %ptr_to_field, align 8
  call void @release_obj(i8* %field_value)
  %ptr_to_field1 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8*, i8* }* %ptr_to_obj, i32 0, i32 3
  %field_value2 = load i8*, i8** %ptr_to_field1, align 8
  call void @release_obj(i8* %field_value2)
  ret void
}

define void @dtor.18(i8* %0) {
entry:
  %ptr_to_obj = bitcast i8* %0 to { { i64, void (i8*)* }, i64 }*
  ret void
}
