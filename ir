; ModuleID = 'main'
source_filename = "main"

@int_placefolder = private unnamed_addr constant [6 x i8] c"%lld\0A\00", align 1

define void @empty_destructor(i64* %0) {
entry:
  ret void
}

declare i32 @printf(i8*, ...)

declare void @report_malloc(i8*)

declare void @report_retain(i8*, i64)

declare void @report_release(i8*, i64)

define void @print_int_obj({ { i64, void (i8*)* }, i64 }* %0) {
entry:
  %int_field_ptr = getelementptr inbounds { { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* %0, i32 0, i32 1
  %int_val = load i64, i64* %int_field_ptr, align 4
  %call_print_int = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @int_placefolder, i32 0, i32 0), i64 %int_val)
  ret void
}

define void @retain_obj(i8* %0) {
entry:
  %ptr_to_control_block = bitcast i8* %0 to { i64, void (i8*)* }*
  %ptr_to_refcnt = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 0
  %refcnt = load i64, i64* %ptr_to_refcnt, align 4
  call void @report_retain(i8* %0, i64 %refcnt)
  %refcnt1 = add i64 %refcnt, 1
  store i64 %refcnt1, i64* %ptr_to_refcnt, align 4
  ret void
}

define void @release_obj(i8* %0) {
entry:
  %ptr_to_control_block = bitcast i8* %0 to { i64, void (i8*)* }*
  %ptr_to_refcnt = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 0
  %refcnt = load i64, i64* %ptr_to_refcnt, align 4
  call void @report_release(i8* %0, i64 %refcnt)
  %refcnt1 = sub i64 %refcnt, 1
  %is_refcnt_zero = icmp eq i64 %refcnt1, 0
  br i1 %is_refcnt_zero, label %refcnt_zero_after_release, label %end

refcnt_zero_after_release:                        ; preds = %entry
  %ptr_to_dtor_ptr = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 1
  %ptr_to_dtor = load void (i8*)*, void (i8*)** %ptr_to_dtor_ptr, align 8
  call void %ptr_to_dtor(i8* %0)
  %1 = bitcast i64* %ptr_to_refcnt to i8*
  tail call void @free(i8* %1)
  br label %end

end:                                              ; preds = %refcnt_zero_after_release, %entry
  ret void
}

declare void @free(i8*)

define i32 @main() {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)* }, i8* (i8*, i8*)* }* getelementptr ({ { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* null, i32 1) to i32))
  %ptr_to_obj = bitcast i8* %malloccall to { { i64, void (i8*)* }, i8* (i8*, i8*)* }*
  %cast_to_i8ptr = bitcast { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_obj to i8*
  call void @report_malloc(i8* %cast_to_i8ptr)
  %ptr_to_control_block = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_obj, i32 0, i32 0
  %ptr_to_refcnt = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt, align 4
  %ptr_to_dtor_field = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 1
  store void (i8*)* @dtor.2, void (i8*)** %ptr_to_dtor_field, align 8
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_obj, i32 0, i32 1
  store i8* (i8*, i8*)* @lambda, i8* (i8*, i8*)** %ptr_to_field, align 8
  %ptr_ret_generate_expr = bitcast { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_obj to i8*
  call void @release_obj(i8* %ptr_ret_generate_expr)
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)* }, i8* (i8*, i8*)* }* getelementptr ({ { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* null, i32 1) to i32))
  %ptr_to_obj2 = bitcast i8* %malloccall1 to { { i64, void (i8*)* }, i8* (i8*, i8*)* }*
  %cast_to_i8ptr3 = bitcast { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_obj2 to i8*
  call void @report_malloc(i8* %cast_to_i8ptr3)
  %ptr_to_control_block4 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_obj2, i32 0, i32 0
  %ptr_to_refcnt5 = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block4, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt5, align 4
  %ptr_to_dtor_field6 = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block4, i32 0, i32 1
  store void (i8*)* @dtor.2, void (i8*)** %ptr_to_dtor_field6, align 8
  %ptr_to_field7 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_obj2, i32 0, i32 1
  store i8* (i8*, i8*)* @lambda.3, i8* (i8*, i8*)** %ptr_to_field7, align 8
  %ptr_ret_generate_expr8 = bitcast { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_obj2 to i8*
  call void @release_obj(i8* %ptr_ret_generate_expr8)
  %malloccall9 = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)* }, i8* (i8*, i8*)* }* getelementptr ({ { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* null, i32 1) to i32))
  %ptr_to_obj10 = bitcast i8* %malloccall9 to { { i64, void (i8*)* }, i8* (i8*, i8*)* }*
  %cast_to_i8ptr11 = bitcast { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_obj10 to i8*
  call void @report_malloc(i8* %cast_to_i8ptr11)
  %ptr_to_control_block12 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_obj10, i32 0, i32 0
  %ptr_to_refcnt13 = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block12, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt13, align 4
  %ptr_to_dtor_field14 = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block12, i32 0, i32 1
  store void (i8*)* @dtor.2, void (i8*)** %ptr_to_dtor_field14, align 8
  %ptr_to_field15 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_obj10, i32 0, i32 1
  store i8* (i8*, i8*)* @lambda.7, i8* (i8*, i8*)** %ptr_to_field15, align 8
  %ptr_ret_generate_expr16 = bitcast { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_obj10 to i8*
  %malloccall17 = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)* }, i64 }* getelementptr ({ { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* null, i32 1) to i32))
  %ptr_to_obj18 = bitcast i8* %malloccall17 to { { i64, void (i8*)* }, i64 }*
  %cast_to_i8ptr19 = bitcast { { i64, void (i8*)* }, i64 }* %ptr_to_obj18 to i8*
  call void @report_malloc(i8* %cast_to_i8ptr19)
  %ptr_to_control_block20 = getelementptr inbounds { { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* %ptr_to_obj18, i32 0, i32 0
  %ptr_to_refcnt21 = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block20, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt21, align 4
  %ptr_to_dtor_field22 = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block20, i32 0, i32 1
  store void (i8*)* @dtor.11, void (i8*)** %ptr_to_dtor_field22, align 8
  %ptr_to_field23 = getelementptr inbounds { { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* %ptr_to_obj18, i32 0, i32 1
  store i64 3, i64* %ptr_to_field23, align 4
  %ptr_ret_generate_expr24 = bitcast { { i64, void (i8*)* }, i64 }* %ptr_to_obj18 to i8*
  %ptr_to_lam_obj = bitcast i8* %ptr_ret_generate_expr16 to { { i64, void (i8*)* }, i8* (i8*, i8*)* }*
  %ptr_to_field25 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_lam_obj, i32 0, i32 1
  %field_value = load i8* (i8*, i8*)*, i8* (i8*, i8*)** %ptr_to_field25, align 8
  %call_lambda = tail call i8* %field_value(i8* %ptr_ret_generate_expr24, i8* %ptr_ret_generate_expr16)
  %malloccall26 = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)* }, i64 }* getelementptr ({ { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* null, i32 1) to i32))
  %ptr_to_obj27 = bitcast i8* %malloccall26 to { { i64, void (i8*)* }, i64 }*
  %cast_to_i8ptr28 = bitcast { { i64, void (i8*)* }, i64 }* %ptr_to_obj27 to i8*
  call void @report_malloc(i8* %cast_to_i8ptr28)
  %ptr_to_control_block29 = getelementptr inbounds { { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* %ptr_to_obj27, i32 0, i32 0
  %ptr_to_refcnt30 = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block29, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt30, align 4
  %ptr_to_dtor_field31 = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block29, i32 0, i32 1
  store void (i8*)* @dtor.11, void (i8*)** %ptr_to_dtor_field31, align 8
  %ptr_to_field32 = getelementptr inbounds { { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* %ptr_to_obj27, i32 0, i32 1
  store i64 5, i64* %ptr_to_field32, align 4
  %ptr_ret_generate_expr33 = bitcast { { i64, void (i8*)* }, i64 }* %ptr_to_obj27 to i8*
  %ptr_to_lam_obj34 = bitcast i8* %call_lambda to { { i64, void (i8*)* }, i8* (i8*, i8*)* }*
  %ptr_to_field35 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_lam_obj34, i32 0, i32 1
  %field_value36 = load i8* (i8*, i8*)*, i8* (i8*, i8*)** %ptr_to_field35, align 8
  %call_lambda37 = tail call i8* %field_value36(i8* %ptr_ret_generate_expr33, i8* %call_lambda)
  %int_obj_ptr = bitcast i8* %call_lambda37 to { { i64, void (i8*)* }, i64 }*
  %ptr_to_field38 = getelementptr inbounds { { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* %int_obj_ptr, i32 0, i32 1
  %field_value39 = load i64, i64* %ptr_to_field38, align 4
  %ret = trunc i64 %field_value39 to i32
  ret i32 %ret
}

define i8* @lambda(i8* %0, i8* %1) {
entry:
  %closure_ptr = bitcast i8* %1 to { { i64, void (i8*)* }, i8* (i8*, i8*)* }*
  call void @release_obj(i8* %1)
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* getelementptr ({ { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* null, i32 1) to i32))
  %ptr_to_obj = bitcast i8* %malloccall to { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }*
  %cast_to_i8ptr = bitcast { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj to i8*
  call void @report_malloc(i8* %cast_to_i8ptr)
  %ptr_to_control_block = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 0
  %ptr_to_refcnt = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt, align 4
  %ptr_to_dtor_field = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 1
  store void (i8*)* @dtor, void (i8*)** %ptr_to_dtor_field, align 8
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 1
  store i8* (i8*, i8*)* @lambda.1, i8* (i8*, i8*)** %ptr_to_field, align 8
  %ptr_to_field1 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 2
  store i8* %0, i8** %ptr_to_field1, align 8
  %ptr_ret_generate_expr = bitcast { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj to i8*
  ret i8* %ptr_ret_generate_expr
}

define i8* @lambda.1(i8* %0, i8* %1) {
entry:
  %closure_ptr = bitcast i8* %1 to { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }*
  %ptr_to_captured_field = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %closure_ptr, i32 0, i32 2
  %ptr_to_captured_obj = load i8*, i8** %ptr_to_captured_field, align 8
  call void @retain_obj(i8* %ptr_to_captured_obj)
  %ptr_to_lam_obj = bitcast i8* %ptr_to_captured_obj to { { i64, void (i8*)* }, i8* (i8*, i8*)* }*
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_lam_obj, i32 0, i32 1
  %field_value = load i8* (i8*, i8*)*, i8* (i8*, i8*)** %ptr_to_field, align 8
  %call_lambda = tail call i8* %field_value(i8* %1, i8* %ptr_to_captured_obj)
  %ptr_to_lam_obj1 = bitcast i8* %call_lambda to { { i64, void (i8*)* }, i8* (i8*, i8*)* }*
  %ptr_to_field2 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)* }, { { i64, void (i8*)* }, i8* (i8*, i8*)* }* %ptr_to_lam_obj1, i32 0, i32 1
  %field_value3 = load i8* (i8*, i8*)*, i8* (i8*, i8*)** %ptr_to_field2, align 8
  %call_lambda4 = tail call i8* %field_value3(i8* %0, i8* %call_lambda)
  ret i8* %call_lambda4
}

declare noalias i8* @malloc(i32)

define void @dtor(i8* %0) {
entry:
  %ptr_to_obj = bitcast i8* %0 to { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }*
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 2
  %field_value = load i8*, i8** %ptr_to_field, align 8
  call void @release_obj(i8* %field_value)
  ret void
}

define void @dtor.2(i8* %0) {
entry:
  %ptr_to_obj = bitcast i8* %0 to { { i64, void (i8*)* }, i8* (i8*, i8*)* }*
  ret void
}

define i8* @lambda.3(i8* %0, i8* %1) {
entry:
  %closure_ptr = bitcast i8* %1 to { { i64, void (i8*)* }, i8* (i8*, i8*)* }*
  call void @release_obj(i8* %1)
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* getelementptr ({ { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* null, i32 1) to i32))
  %ptr_to_obj = bitcast i8* %malloccall to { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }*
  %cast_to_i8ptr = bitcast { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj to i8*
  call void @report_malloc(i8* %cast_to_i8ptr)
  %ptr_to_control_block = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 0
  %ptr_to_refcnt = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt, align 4
  %ptr_to_dtor_field = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 1
  store void (i8*)* @dtor.6, void (i8*)** %ptr_to_dtor_field, align 8
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 1
  store i8* (i8*, i8*)* @lambda.4, i8* (i8*, i8*)** %ptr_to_field, align 8
  %ptr_to_field1 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 2
  store i8* %0, i8** %ptr_to_field1, align 8
  %ptr_ret_generate_expr = bitcast { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj to i8*
  ret i8* %ptr_ret_generate_expr
}

define i8* @lambda.4(i8* %0, i8* %1) {
entry:
  %closure_ptr = bitcast i8* %1 to { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }*
  %ptr_to_captured_field = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %closure_ptr, i32 0, i32 2
  %ptr_to_captured_obj = load i8*, i8** %ptr_to_captured_field, align 8
  call void @retain_obj(i8* %ptr_to_captured_obj)
  call void @release_obj(i8* %1)
  %ptr_to_struct = bitcast i8* %ptr_to_captured_obj to { { i64, void (i8*)* }, i64 }*
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* %ptr_to_struct, i32 0, i32 1
  %field_value = load i64, i64* %ptr_to_field, align 4
  %ptr_to_struct1 = bitcast i8* %0 to { { i64, void (i8*)* }, i64 }*
  %ptr_to_field2 = getelementptr inbounds { { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* %ptr_to_struct1, i32 0, i32 1
  %field_value3 = load i64, i64* %ptr_to_field2, align 4
  %eq = icmp eq i64 %field_value, %field_value3
  %eq_bool = sext i1 %eq to i8
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)* }, i8 }* getelementptr ({ { i64, void (i8*)* }, i8 }, { { i64, void (i8*)* }, i8 }* null, i32 1) to i32))
  %ptr_to_obj = bitcast i8* %malloccall to { { i64, void (i8*)* }, i8 }*
  %cast_to_i8ptr = bitcast { { i64, void (i8*)* }, i8 }* %ptr_to_obj to i8*
  call void @report_malloc(i8* %cast_to_i8ptr)
  %ptr_to_control_block = getelementptr inbounds { { i64, void (i8*)* }, i8 }, { { i64, void (i8*)* }, i8 }* %ptr_to_obj, i32 0, i32 0
  %ptr_to_refcnt = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt, align 4
  %ptr_to_dtor_field = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 1
  store void (i8*)* @dtor.5, void (i8*)** %ptr_to_dtor_field, align 8
  %ptr_to_field4 = getelementptr inbounds { { i64, void (i8*)* }, i8 }, { { i64, void (i8*)* }, i8 }* %ptr_to_obj, i32 0, i32 1
  store i8 %eq_bool, i8* %ptr_to_field4, align 1
  call void @release_obj(i8* %ptr_to_captured_obj)
  call void @release_obj(i8* %0)
  %ptr_ret_generate_expr = bitcast { { i64, void (i8*)* }, i8 }* %ptr_to_obj to i8*
  ret i8* %ptr_ret_generate_expr
}

define void @dtor.5(i8* %0) {
entry:
  %ptr_to_obj = bitcast i8* %0 to { { i64, void (i8*)* }, i8 }*
  ret void
}

define void @dtor.6(i8* %0) {
entry:
  %ptr_to_obj = bitcast i8* %0 to { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }*
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 2
  %field_value = load i8*, i8** %ptr_to_field, align 8
  call void @release_obj(i8* %field_value)
  ret void
}

define i8* @lambda.7(i8* %0, i8* %1) {
entry:
  %closure_ptr = bitcast i8* %1 to { { i64, void (i8*)* }, i8* (i8*, i8*)* }*
  call void @release_obj(i8* %1)
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* getelementptr ({ { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* null, i32 1) to i32))
  %ptr_to_obj = bitcast i8* %malloccall to { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }*
  %cast_to_i8ptr = bitcast { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj to i8*
  call void @report_malloc(i8* %cast_to_i8ptr)
  %ptr_to_control_block = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 0
  %ptr_to_refcnt = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt, align 4
  %ptr_to_dtor_field = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 1
  store void (i8*)* @dtor.10, void (i8*)** %ptr_to_dtor_field, align 8
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 1
  store i8* (i8*, i8*)* @lambda.8, i8* (i8*, i8*)** %ptr_to_field, align 8
  %ptr_to_field1 = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 2
  store i8* %0, i8** %ptr_to_field1, align 8
  %ptr_ret_generate_expr = bitcast { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj to i8*
  ret i8* %ptr_ret_generate_expr
}

define i8* @lambda.8(i8* %0, i8* %1) {
entry:
  %closure_ptr = bitcast i8* %1 to { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }*
  %ptr_to_captured_field = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %closure_ptr, i32 0, i32 2
  %ptr_to_captured_obj = load i8*, i8** %ptr_to_captured_field, align 8
  call void @retain_obj(i8* %ptr_to_captured_obj)
  call void @release_obj(i8* %1)
  %ptr_to_struct = bitcast i8* %ptr_to_captured_obj to { { i64, void (i8*)* }, i64 }*
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* %ptr_to_struct, i32 0, i32 1
  %field_value = load i64, i64* %ptr_to_field, align 4
  %ptr_to_struct1 = bitcast i8* %0 to { { i64, void (i8*)* }, i64 }*
  %ptr_to_field2 = getelementptr inbounds { { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* %ptr_to_struct1, i32 0, i32 1
  %field_value3 = load i64, i64* %ptr_to_field2, align 4
  %add = add i64 %field_value, %field_value3
  %malloccall = tail call i8* @malloc(i32 ptrtoint ({ { i64, void (i8*)* }, i64 }* getelementptr ({ { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* null, i32 1) to i32))
  %ptr_to_obj = bitcast i8* %malloccall to { { i64, void (i8*)* }, i64 }*
  %cast_to_i8ptr = bitcast { { i64, void (i8*)* }, i64 }* %ptr_to_obj to i8*
  call void @report_malloc(i8* %cast_to_i8ptr)
  %ptr_to_control_block = getelementptr inbounds { { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* %ptr_to_obj, i32 0, i32 0
  %ptr_to_refcnt = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 0
  store i64 1, i64* %ptr_to_refcnt, align 4
  %ptr_to_dtor_field = getelementptr inbounds { i64, void (i8*)* }, { i64, void (i8*)* }* %ptr_to_control_block, i32 0, i32 1
  store void (i8*)* @dtor.9, void (i8*)** %ptr_to_dtor_field, align 8
  %ptr_to_field4 = getelementptr inbounds { { i64, void (i8*)* }, i64 }, { { i64, void (i8*)* }, i64 }* %ptr_to_obj, i32 0, i32 1
  store i64 %add, i64* %ptr_to_field4, align 4
  call void @release_obj(i8* %ptr_to_captured_obj)
  call void @release_obj(i8* %0)
  %ptr_ret_generate_expr = bitcast { { i64, void (i8*)* }, i64 }* %ptr_to_obj to i8*
  ret i8* %ptr_ret_generate_expr
}

define void @dtor.9(i8* %0) {
entry:
  %ptr_to_obj = bitcast i8* %0 to { { i64, void (i8*)* }, i64 }*
  ret void
}

define void @dtor.10(i8* %0) {
entry:
  %ptr_to_obj = bitcast i8* %0 to { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }*
  %ptr_to_field = getelementptr inbounds { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }, { { i64, void (i8*)* }, i8* (i8*, i8*)*, i8* }* %ptr_to_obj, i32 0, i32 2
  %field_value = load i8*, i8** %ptr_to_field, align 8
  call void @release_obj(i8* %field_value)
  ret void
}

define void @dtor.11(i8* %0) {
entry:
  %ptr_to_obj = bitcast i8* %0 to { { i64, void (i8*)* }, i64 }*
  ret void
}
