; ModuleID = 'main'
source_filename = "main"

@ptinr_int_literal = private unnamed_addr constant [6 x i8] c"%lld\0A\00", align 1

declare i32 @printf(i8*, ...)

define i32 @main() {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i64* getelementptr (i64, i64* null, i32 1) to i64), i64 2) to i32))
  %ptr = bitcast i8* %malloccall to { i64, i64 }*
  %ptr_to_refcnt = getelementptr inbounds { i64, i64 }, { i64, i64 }* %ptr, i32 0, i32 0
  store i64 0, i64* %ptr_to_refcnt, align 4
  %ptr_to_int_value = getelementptr inbounds { i64, i64 }, { i64, i64 }* %ptr, i32 0, i32 1
  store i64 -42, i64* %ptr_to_int_value, align 4
  %ptr1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %ptr, i32 0, i32 1
  %val = load i64, i64* %ptr1, align 4
  %call_print_int = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @ptinr_int_literal, i32 0, i32 0), i64 %val)
  ret i32 0
}

declare noalias i8* @malloc(i32)
