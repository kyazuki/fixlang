use serde::{Deserialize, Serialize};

use super::*;

#[derive(Clone, Serialize, Deserialize)]
pub enum LLVMGenerator {
    IntLit(InlineLLVMIntLit),
    FloatLit(InlineLLVMFloatLit),
    NullPtrLit(InlineLLVMNullPtrLit),
    BoolLit(InlineLLVMBoolLit),
    StringLit(InlineLLVMStringLit),
    FixBody(InlineLLVMFixBody),
    CastIntegralBody(InlineLLVMCastIntegralBody),
    CastFloatBody(InlineLLVMCastFloatBody),
    CastIntToFloatBody(InlineLLVMCastIntToFloatBody),
    CastFloatToIntBody(InlineLLVMCastFloatToIntBody),
    ShiftBody(InlineLLVMShiftBody),
    BitwiseOperationBody(InlineLLVMBitwiseOperationBody),
    FillArrayBody(InlineLLVMFillArrayBody),
    MakeEmptyArrayBody(InlineLLVMMakeEmptyArrayBody),
    UnsafeSetArrayBody(InlineLLVMUnsafeSetArrayBody),
    UnsafeGetArrayBody(InlineLLVMUnsafeGetArrayBody),
    UnsafeSetSizeArrayBody(InlineLLVMUnsafeSetSizeArrayBody),
    ArrayGetBody(InlineLLVMArrayGetBody),
    ArraySetBody(InlineLLVMArraySetBody),
    ArrayModBody(InlineLLVMArrayModBody),
    ArrayForceUniqueBody(InlineLLVMArrayForceUniqueBody),
    ArrayGetPtrBody(InlineLLVMArrayGetPtrBody),
    ArrayGetSizeBody(InlineLLVMArrayGetSizeBody),
    ArrayGetCapacityBody(InlineLLVMArrayGetCapacityBody),
    StructGetBody(InlineLLVMStructGetBody),
    StructModBody(InlineLLVMStructModBody),
    StructSetBody(InlineLLVMStructSetBody),
    MakeUnionBody(InlineLLVMMakeUnionBody),
    UnionAsBody(InlineLLVMUnionAsBody),
    UnionIsBody(InlineLLVMUnionIsBody),
    UnionModBody(InlineLLVMUnionModBody),
    LoopFunctionBody(InlineLLVMLoopFunctionBody),
    AbortFunctionBody(InlineLLVMAbortFunctionBody),
    IsUniqueFunctionBody(InlineLLVMIsUniqueFunctionBody),
    IntNegBody(InlineLLVMIntNegBody),
    FloatNegBody(InlineLLVMFloatNegBody),
    BoolNegBody(InlineLLVMBoolNegBody),
    IntEqBody(InlineLLVMIntEqBody),
    PtrEqBody(InlineLLVMPtrEqBody),
    FloatEqBody(InlineLLVMFloatEqBody),
    IntLessThanBody(InlineLLVMIntLessThanBody),
    FloatLessThanBody(InlineLLVMFloatLessThanBody),
    IntLessThanOrEqBody(InlineLLVMIntLessThanOrEqBody),
    FloatLessThanOrEqBody(InlineLLVMFloatLessThanOrEqBody),
    IntAddBody(InlineLLVMIntAddBody),
    FloatAddBody(InlineLLVMFloatAddBody),
    IntSubBody(InlineLLVMIntSubBody),
    FloatSubBody(InlineLLVMFloatSubBody),
    IntMulBody(InlineLLVMIntMulBody),
    FloatMulBody(InlineLLVMFloatMulBody),
    IntDivBody(InlineLLVMIntDivBody),
    FloatDivBody(InlineLLVMFloatDivBody),
    IntRemBody(InlineLLVMIntRemBody),
    GetPtrOfBoxedValueFunctionBody(InlineLLVMGetPtrOfBoxedValueFunctionBody),
    MarkThreadedFunctionBody(InlineLLVMMarkThreadedFunctionBody),
    // AsyncTaskMakeTaskData(InlineLLVMAsyncTaskMakeTaskData),
    // AsyncTaskDeleteTaskData(InlineLLVMAsyncTaskDeleteTaskData),
}

impl LLVMGenerator {
    pub fn generate<'c, 'm, 'b>(
        &self,
        gc: &mut GenerationContext<'c, 'm>,
        ty: &Rc<TypeNode>,
        rvo: Option<Object<'c>>,
    ) -> Object<'c> {
        match self {
            LLVMGenerator::IntLit(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::FloatLit(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::NullPtrLit(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::BoolLit(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::StringLit(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::FixBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::CastIntegralBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::CastFloatBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::CastIntToFloatBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::CastFloatToIntBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::ShiftBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::BitwiseOperationBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::FillArrayBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::MakeEmptyArrayBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::UnsafeSetArrayBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::UnsafeGetArrayBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::UnsafeSetSizeArrayBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::ArrayGetBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::ArraySetBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::ArrayModBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::ArrayForceUniqueBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::ArrayGetPtrBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::ArrayGetSizeBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::ArrayGetCapacityBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::StructGetBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::StructModBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::StructSetBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::MakeUnionBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::UnionAsBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::UnionIsBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::UnionModBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::LoopFunctionBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::AbortFunctionBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::IsUniqueFunctionBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::IntNegBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::FloatNegBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::BoolNegBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::IntEqBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::PtrEqBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::FloatEqBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::IntLessThanBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::FloatLessThanBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::IntLessThanOrEqBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::FloatLessThanOrEqBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::IntAddBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::FloatAddBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::IntSubBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::FloatSubBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::IntMulBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::FloatMulBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::IntDivBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::FloatDivBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::IntRemBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::GetPtrOfBoxedValueFunctionBody(x) => x.generate(gc, ty, rvo),
            LLVMGenerator::MarkThreadedFunctionBody(x) => x.generate(gc, ty, rvo),
            // LLVMGenerator::AsyncTaskMakeTaskData(x) => x.generate(gc, ty, rvo),
            // LLVMGenerator::AsyncTaskDeleteTaskData(x) => x.generate(gc, ty, rvo),
        }
    }
}

#[derive(Clone, Serialize, Deserialize)]
pub struct InlineLLVM {
    pub generator: LLVMGenerator,
    pub free_vars: Vec<FullName>, // e.g. "+" literal has two free variables.
    pub name: String,
    pub ty: Rc<TypeNode>,
}
